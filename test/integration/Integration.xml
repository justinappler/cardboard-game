<project default="all">
  <target name="all" depends="test" />
  <target name="clean" depends="clean-compile-test" />
	
  <property name="int-dir" location="." />
  <property name="src-dir" location="../../src/com/immortallabs/cardboard/" />
  <property name="natlib-dir" location="../../src/edu/profdalbey/" />
  <property name="bin-dir" location="classes" />
  <property name="lib-dir" location="../../lib" />
  <property name="emma-dir" value="${lib-dir}" />
  <property name="coverage-dir" value="coverage" />

  <property name="TALK" value="false" />
  <property name="emma.enabled" value="true" />

  <path id="emma.lib" >
    <pathelement location="${emma-dir}/emma.jar" />
    <pathelement location="${emma-dir}/emma_ant.jar" />
  </path>

 <path id="junit.lib" >
  	<pathelement location="${lib-dir}/junit4.jar" />
 </path>
	
  <taskdef resource="emma_ant.properties" classpathref="emma.lib" />
	
	  
  <taskdef name="junit"
    classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
    <classpath>
    	  <pathelement location="../../lib/ant-junit.jar"/>
    </classpath>
  </taskdef>
	
  <path id="classpath.cardboard">
  	<pathelement location="${bin-dir}" />
  	<pathelement location="${lib-dir}/junit4.jar" />
    <pathelement location="${emma-dir}/emma.jar" />
    <pathelement location="${emma-dir}/emma_ant.jar" />
  </path>
	
  <path id="classpath.cardboard.classes">
  	<pathelement location="${bin-dir}" />
  </path>
	  
  <target name="clean-compile-test">
  	<mkdir dir="classes" />
    <delete verbose="false">
      <fileset dir="${bin-dir}" includes="**/*" />
    </delete>
  </target>
	
  <target name="compile-test" depends="clean-compile-test">
    <copy todir="${bin-dir}">
      <fileset dir="../../">
    	<include name="*.txt"/>
      </fileset>
    </copy>
    
    <javac debug="on" verbose="${TALK}" destdir="${bin-dir}">
      <classpath>
    	<path refid="junit.lib"/>
      </classpath>
      <src path="${src-dir}"/>
      <src path="${natlib-dir}"/>
      <src path="${int-dir}/Card/src"/>
      <src path="${int-dir}/Timer"/>
      <src path="${int-dir}/SetsBoard"/>
      <src location="${int-dir}/Score/src/com/immortallabs/cardboard/game/"/>
      <src path="${int-dir}/Deck/src"/>
    </javac>
  </target>

  <target name="test"  depends="compile-test">
  	
    <emma enabled="${emma.enabled}">
      <instr instrpathref="classpath.cardboard.classes"
             metadatafile="${coverage-dir}/metadata.emma"
             merge="false"
      		 mode="overwrite">
      </instr>
    </emma>

  	
    <java classname="com.immortallabs.cardboard.CardBoardApp" failonerror="false" fork="yes">
        <arg line="-t -text" />
    	<classpath >
    		<path refid="classpath.cardboard"/>
    	</classpath>
    	<redirector input="${int-dir}/GameState/inputs.txt" output="${int-dir}/GameState/result.txt" />
	</java>
    	
  	<exec outputproperty="diff.result" executable="diff">
        <arg line="GameState/result.txt GameState/oracle.txt" />
 	</exec>
  	
  	<echo message="${diff.result}"/>

    <condition property="test.passed" else="false">
  		<equals arg1="${diff.result}" arg2="" />
  	</condition>

	<echo message="GameState Integration Test Passed = ${test.passed}" />
  
    <junit printsummary="no">
      <classpath>
      	<path refid="classpath.cardboard" />
      </classpath>
      <formatter type="brief" usefile="false" />
      <test name="com.immortallabs.cardboard.game.CardTest" />
      <test name="integration.Timer.TimerTest" />
      <test name="integration.SetsBoard.SetsBoardTestInt" />
      <test name="com.immortallabs.cardboard.game.DeckTest" />
    </junit>
  	
  	
  	
    <emma enabled="${emma.enabled}" >
        <report sourcepath="${src-dir}" >
        	
        <fileset dir="${coverage-dir}" >
          <include name="*.emma" />
        </fileset>
        	
	    <fileset dir="${int-dir}" >
	      <include name="*.ec" />
	    </fileset>
        	
        <txt outfile="${coverage-dir}/coverage.txt" />
        <html outfile="${coverage-dir}/coverage.html" />
      </report>
    </emma>
  	
</target>
</project>
